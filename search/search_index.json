{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Jscrapy \u5feb\u901f\u4f7f\u7528 \u6dfb\u52a0\u4f9d\u8d56 <dependency> <groupId> cn.tianjx98 </groupId> <artifactId> jscrapy </artifactId> <version> 1.0.0 </version> </dependency> import lombok.extern.log4j.Log4j2 ; import cn.tianjx98.jscrapy.core.Element ; import cn.tianjx98.jscrapy.core.Spider ; import cn.tianjx98.jscrapy.core.SpiderEngine ; import cn.tianjx98.jscrapy.core.annotation.ScraperElement ; import cn.tianjx98.jscrapy.http.Response ; import reactor.core.publisher.Flux ; @ScraperElement @Log4j2 public class SimpleSpider implements Spider { @Override public String getName () { return \"simpleSpider\" ; } @Override public Flux < String > startUrls () { return Flux . just ( \"https://www.baidu.com\" ); } @Override public Flux < Element > parse ( Response response ) { System . out . println ( response . getBody ()); return Flux . empty (); } public static void main ( String [] args ) throws InstantiationException , IllegalAccessException { SpiderEngine . start ( SimpleSpider . class ); } } \u6570\u636e\u6301\u4e45\u5316 1.\u5b9a\u4e49Item @Data public class SimpleItem extends Item { String body ; public SimpleItem ( String body ) { this . body = body ; } } 2.\u5b9a\u4e49Pipeline /** * \u53ef\u4ee5\u4f7f\u7528Pipeline\u5b8c\u6210\u6570\u636e\u6301\u4e45\u5316\u7684\u903b\u8f91<br> * \u91c7\u7528\u4e86\u8fc7\u6ee4\u5668\u8bbe\u8ba1\u6a21\u5f0f, \u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2aPipeline\u5bf9\u6570\u636e\u8fdb\u884c\u5904\u7406<br> * \u6ce8\u610f: \u5982\u679c\u6a21\u677f\u53c2\u6570\u4e3aSimpleItem, \u90a3\u4e48\u8fd9\u4e2aPipeline\u5c31\u53ea\u4f1a\u5904\u7406\u7c7b\u578b\u4e3aSimpleItem\u7684Item * * @author tianjx98 * @date 2021/11/4 15:06 */ @Log4j2 @ScraperElement @Order ( 1 ) public class SimplePipeline implements Pipeline < SimpleItem > { @Override public void open () { // \u542f\u52a8\u65f6\u6267\u884c\u6b64\u65b9\u6cd5 } @Override public SimpleItem processItem ( SimpleItem item , Spider spider ) { log . info ( \"SimplePipeline: \" + item ); // \u4fdd\u5b58\u6570\u636e return item ; } @Override public void close () { // \u7ed3\u675f\u65f6\u6267\u884c\u6b64\u65b9\u6cd5 } } 3.\u542f\u52a8\u722c\u866b @ScraperElement @Log4j2 public class SimpleSpider implements Spider { @Override public String getName () { return \"simpleSpider\" ; } @Override public Flux < String > startUrls () { return Flux . just ( \"https://www.baidu.com\" ); } @Override public Flux < Element > parse ( Response response ) { log . info ( \"\u89e3\u6790\u54cd\u5e94: {}\" , response ); return Flux . just ( new SimpleItem ( response . getBody ())); } public static void main ( String [] args ) throws InstantiationException , IllegalAccessException { SpiderEngine . start ( SimpleSpider . class ); } }","title":"\u4e3b\u9875"},{"location":"#jscrapy","text":"","title":"Jscrapy"},{"location":"#_1","text":"\u6dfb\u52a0\u4f9d\u8d56 <dependency> <groupId> cn.tianjx98 </groupId> <artifactId> jscrapy </artifactId> <version> 1.0.0 </version> </dependency> import lombok.extern.log4j.Log4j2 ; import cn.tianjx98.jscrapy.core.Element ; import cn.tianjx98.jscrapy.core.Spider ; import cn.tianjx98.jscrapy.core.SpiderEngine ; import cn.tianjx98.jscrapy.core.annotation.ScraperElement ; import cn.tianjx98.jscrapy.http.Response ; import reactor.core.publisher.Flux ; @ScraperElement @Log4j2 public class SimpleSpider implements Spider { @Override public String getName () { return \"simpleSpider\" ; } @Override public Flux < String > startUrls () { return Flux . just ( \"https://www.baidu.com\" ); } @Override public Flux < Element > parse ( Response response ) { System . out . println ( response . getBody ()); return Flux . empty (); } public static void main ( String [] args ) throws InstantiationException , IllegalAccessException { SpiderEngine . start ( SimpleSpider . class ); } }","title":"\u5feb\u901f\u4f7f\u7528"},{"location":"#_2","text":"1.\u5b9a\u4e49Item @Data public class SimpleItem extends Item { String body ; public SimpleItem ( String body ) { this . body = body ; } } 2.\u5b9a\u4e49Pipeline /** * \u53ef\u4ee5\u4f7f\u7528Pipeline\u5b8c\u6210\u6570\u636e\u6301\u4e45\u5316\u7684\u903b\u8f91<br> * \u91c7\u7528\u4e86\u8fc7\u6ee4\u5668\u8bbe\u8ba1\u6a21\u5f0f, \u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2aPipeline\u5bf9\u6570\u636e\u8fdb\u884c\u5904\u7406<br> * \u6ce8\u610f: \u5982\u679c\u6a21\u677f\u53c2\u6570\u4e3aSimpleItem, \u90a3\u4e48\u8fd9\u4e2aPipeline\u5c31\u53ea\u4f1a\u5904\u7406\u7c7b\u578b\u4e3aSimpleItem\u7684Item * * @author tianjx98 * @date 2021/11/4 15:06 */ @Log4j2 @ScraperElement @Order ( 1 ) public class SimplePipeline implements Pipeline < SimpleItem > { @Override public void open () { // \u542f\u52a8\u65f6\u6267\u884c\u6b64\u65b9\u6cd5 } @Override public SimpleItem processItem ( SimpleItem item , Spider spider ) { log . info ( \"SimplePipeline: \" + item ); // \u4fdd\u5b58\u6570\u636e return item ; } @Override public void close () { // \u7ed3\u675f\u65f6\u6267\u884c\u6b64\u65b9\u6cd5 } } 3.\u542f\u52a8\u722c\u866b @ScraperElement @Log4j2 public class SimpleSpider implements Spider { @Override public String getName () { return \"simpleSpider\" ; } @Override public Flux < String > startUrls () { return Flux . just ( \"https://www.baidu.com\" ); } @Override public Flux < Element > parse ( Response response ) { log . info ( \"\u89e3\u6790\u54cd\u5e94: {}\" , response ); return Flux . just ( new SimpleItem ( response . getBody ())); } public static void main ( String [] args ) throws InstantiationException , IllegalAccessException { SpiderEngine . start ( SimpleSpider . class ); } }","title":"\u6570\u636e\u6301\u4e45\u5316"}]}